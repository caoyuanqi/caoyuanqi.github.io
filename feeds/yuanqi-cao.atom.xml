<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Yuanqi Cao Blog</title><link href="http://caoyuanqi.github.io/" rel="alternate"></link><link href="http://caoyuanqi.github.io/feeds/yuanqi-cao.atom.xml" rel="self"></link><id>http://caoyuanqi.github.io/</id><updated>2016-06-02T00:00:00+10:00</updated><entry><title>Emacs java development</title><link href="http://caoyuanqi.github.io/emacs_java_environment" rel="alternate"></link><updated>2016-06-02T00:00:00+10:00</updated><author><name>Yuanqi Cao</name></author><id>tag:caoyuanqi.github.io,2016-06-02:emacs_java_environment</id><summary type="html">
&lt;p&gt;Emacs and java are not good friends, for most of java programmers, the best choice of programming tools are &lt;span class="caps"&gt;IDE&lt;/span&gt;, for example Eclipse or IntelliJ &lt;span class="caps"&gt;IDEA&lt;/span&gt;, I agree that &lt;span class="caps"&gt;IDE&lt;/span&gt; is very friendly for Java programming especially for the web development for java, Most of my time is spent on &lt;span class="caps"&gt;IDE&lt;/span&gt; as well, I am a Emacs+ user in Eclipse, the experience is similar. However, I think there are some time for me to use emacs rather than &lt;span class="caps"&gt;IDE&lt;/span&gt;.&lt;/p&gt;
&lt;div class="section" id="when-i-just-open-emacs-to-code-rather-than-eclipse"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;When I just open Emacs to code rather than Eclipse&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;1. When I want to focus on the design of code and structure of my programe
For me, &lt;span class="caps"&gt;IDE&lt;/span&gt; is too annoying when I want to just write some interface or designing code. &lt;span class="caps"&gt;IDE&lt;/span&gt; sometimes just pop up a lot of auto completting code and lead me to another direction.
2. When I want to combine the frontend code and backend code together.
I just want to use emacs. Emacs provide a good auto-complete function for html(Emmet), &lt;span class="caps"&gt;CSS&lt;/span&gt; and &lt;span class="caps"&gt;JS&lt;/span&gt;, I don’t think Eclipse is good enough to handle these together. I don’t like to switch Emacs and Eclipse very often, that will make me lost.
3. When I want to learn something new in Java. Emacs will make me focus on these feature and try to remember these new features by head.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="solution"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Solution:&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There are three option for java programming in Emacs. One is &lt;a class="reference external" href="https://github.com/m0smith/malabar-mode"&gt;Malarbra&lt;/a&gt;, but I didn’t successfully make that run, and I think you have to use some limited version of maven to make that run according to the specification. Another choice is &lt;cite&gt;&lt;span class="caps"&gt;JDEE&lt;/span&gt; &amp;lt;http://jdee.sourceforge.net&amp;gt;&lt;/cite&gt;, which is a little old but a new version is under development. I think that is a good choice but still need some time to be ready. The last choice is &lt;a class="reference external" href="https://github.com/senny/emacs-eclim"&gt;Emacs-eclim&lt;/a&gt;, which is actually a shell for eclipse server, actually we still use Eclipse but use Emacs as a proxy and I think that is the best choice so far. Another mode your should never forget is yassnippet, for java install the this mode &lt;a class="reference external" href="https://github.com/nekop/yasnippet-java-mode"&gt;yasnippet-java-mode&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="some-benefit"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Some Benefit&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Almost everything for Eclipse, you could insert getter and setter, problem report, auto import, auto suggest, but everything is called by yourself. So you could focus on the structure and correct errors after you finish the design.&lt;/li&gt;
&lt;li&gt;Keybind, because I am using evil mode in emacs, so that means I could use vi and emacs together to code with the help of Eclipse.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="some-tips-and-pitfall"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Some Tips and pitfall&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Don’t use eclimd, which is a eclipse server in Emacs. That would make your Emacs crash. Instead, using Eclimd in terminal, I tried that in Mac, everything is &lt;span class="caps"&gt;OK&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;You may need to set the varialble of eclim-executable variable in emacs to taget the eclim if you install Eclipse and Eclim in other place.&lt;/p&gt;
&lt;p&gt;Finally, install &lt;a class="reference external" href="http://eclim.org"&gt;eclim&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For reference.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;require-package&lt;/span&gt; &lt;span class="ss"&gt;'emacs-eclim&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="c1"&gt;;;; enable the eclim&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'eclim&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;global-eclim-mode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;;; regular auto-complete initialization&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'auto-complete-config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ac-config-default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;;; add the emacs-eclim source&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="ss"&gt;'ac-emacs-eclim-source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;ac-emacs-eclim-config&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;eclim-executable&lt;/span&gt; &lt;span class="s"&gt;"/Applications/Eclipse.app/Contents/Eclipse/eclim"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;provide&lt;/span&gt; &lt;span class="ss"&gt;'init-eclim&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</summary><category term="emacs java"></category></entry><entry><title>Emacs + Eclipse</title><link href="http://caoyuanqi.github.io/emacseclipse" rel="alternate"></link><updated>2015-01-16T00:00:00+11:00</updated><author><name>Yuanqi Cao</name></author><id>tag:caoyuanqi.github.io,2015-01-16:emacseclipse</id><summary type="html">
&lt;p&gt;Emacs rocks but not for the java project, for spring, hibernate the smart auto completing of Eclipe still is the best tools for the Emacs. Eclipse includes the Emacs keybind but that is not powerful enough for coding for Java programmer. Luckily, Emacs ++ could bring some cool feature for emacser.&lt;/p&gt;
&lt;div class="section" id="some-feature"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;some feature&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;split the windows&lt;/li&gt;
&lt;li&gt;auto complete&lt;/li&gt;
&lt;li&gt;&lt;em&gt;delete-by-word&lt;/em&gt; and &lt;em&gt;kill-line&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;c-x o&lt;/em&gt; to switch buffer&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</summary><category term="emacs"></category></entry><entry><title>My Emacs Road</title><link href="http://caoyuanqi.github.io/myemacsroad" rel="alternate"></link><updated>2015-01-13T00:00:00+11:00</updated><author><name>Yuanqi Cao</name></author><id>tag:caoyuanqi.github.io,2015-01-13:myemacsroad</id><summary type="html">&lt;p&gt;to be&amp;nbsp;continue&lt;/p&gt;
</summary><category term="Emacs"></category></entry><entry><title>Import emacs org mode agenda into osx calendar(perl)</title><link href="http://caoyuanqi.github.io/orgtoosxcalendar" rel="alternate"></link><updated>2015-01-09T00:00:00+11:00</updated><author><name>Yuanqi Cao</name></author><id>tag:caoyuanqi.github.io,2015-01-09:orgtoosxcalendar</id><summary type="html">&lt;p&gt;In the daily life, I prefer to use emacs org mode to manage my time and I also use iphone and macbook. The org mode is a perfect way to manage your time but iphone and calendar is a good way to track your time. So is there a good way to let them work better for&amp;nbsp;me?&lt;/p&gt;
&lt;p&gt;I tried org &lt;a class="reference external" href="https://itunes.apple.com/us/app/mobileorg/id634225528?ls=1&amp;amp;mt=8"&gt;mobile&lt;/a&gt; before, but it is really hard to use in iphone , and it will create some mark line in the pushed event which make the org file more hard to read. I also tryed &lt;a class="reference external" href="http://orgmode.org/worg/org-contrib/org-mac-iCal.html"&gt;org-mac-ical.el&lt;/a&gt; but it is out of date and it can not work in &lt;span class="caps"&gt;OSX&lt;/span&gt; 10.10&amp;nbsp;now.&lt;/p&gt;
&lt;p&gt;There is no good solution on the Internet. So one year ago,  I made a perl script to parse the org file and import events into Calendar in &lt;span class="caps"&gt;OSX&lt;/span&gt;. Because it calls relative apple-script command to import events, it will work fine for further version of &lt;span class="caps"&gt;OSX&lt;/span&gt; without any&amp;nbsp;changes.&lt;/p&gt;
&lt;p&gt;It will automaticly import an event into osx calendar when you assigned a time to it. If your iphone is connected into cloud, it will of course alert your automaticly.  And you can check your schedule on both org agenda and your iphone and clendar on the &lt;span class="caps"&gt;OSX&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The logic is&amp;nbsp;simple:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
1. When emacs store the org file in org mode or org agenda, call the script
2. The script will scan the org file and try to import the files into calendar one by one
3. When it finish scan it will store the added event time into time.txt
4. When any time is added, the event started with the same time will not be added
&lt;/pre&gt;
&lt;p&gt;To use the script, you should added this &lt;a class="reference external" href="https://github.com/caoyuanqi/scripts/blob/master/_org_file_handler"&gt;script&lt;/a&gt; into your &lt;span class="caps"&gt;PATH&lt;/span&gt; and give it excutive&amp;nbsp;right.&lt;/p&gt;
&lt;p&gt;Added this line into your emacs setting files, there will add a hook and call the script every time you store any org&amp;nbsp;file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;add-hook&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;after-save-hook&lt;/span&gt;
       &lt;span class="o"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
          &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;eq&lt;/span&gt; &lt;span class="nv"&gt;major-mode&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;org-mode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;eq&lt;/span&gt; &lt;span class="nv"&gt;major-mode&lt;/span&gt; &lt;span class="ss"&gt;&amp;#39;org-agenda-mode&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;progn&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;setq&lt;/span&gt; &lt;span class="nv"&gt;org-add-event-command&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;concat&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt; &amp;quot;&lt;/span&gt; &lt;span class="nf"&gt;buffer-file-name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;call-process-shell-command&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;_org_file_handler&amp;quot;&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="nv"&gt;org-add-event-command&lt;/span&gt;&lt;span class="p"&gt;))))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should decide a way for the time.txt this will store all time stamp you already imported in the&amp;nbsp;script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;$time_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;where/your/want/to/put/the/time.txt&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Most importantly, you should arrange your org file into this style, because this script will scan the * header as the calendar it want to insert the&amp;nbsp;event:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* calendar name in osx calendar
** Other thing
&lt;/pre&gt;
&lt;p&gt;For example, if I want to insert an event named: exercise into a calendar named life in osx calendar, I will make this even like&amp;nbsp;below:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
* life
** exercise
SCHEDULED: &amp;lt;2015-01-09 Fri 13:00-14:00&amp;gt;
&lt;/pre&gt;
&lt;p&gt;Because it is a script I made almost 1 year ago and it works very  well for me, there are some thing need to do better, but if there is no big problem, I won&amp;#8217;t fix it, because maybe I will rewrite the script in Python in object oritential style. So if there are any interesting ideas to let me&amp;nbsp;know?&lt;/p&gt;
&lt;pre class="literal-block"&gt;
A. The calendar have to restart to make the events be refreshed. (I think it is apple's problem)
B. time.txt maybe should be clean up, but it is not a big issue for us
C. I tell the application every time I want to add an event, I should be tell once and add many, but I am really lazy to change that. ^-^
&lt;/pre&gt;
&lt;p&gt;I think it will work fine for you.&amp;nbsp;enjoy!&lt;/p&gt;
</summary><category term="perl"></category><category term="emacs"></category><category term="org mode"></category></entry><entry><title>Hello world</title><link href="http://caoyuanqi.github.io/hello%20world" rel="alternate"></link><updated>2015-01-01T00:00:00+11:00</updated><author><name>Yuanqi Cao</name></author><id>tag:caoyuanqi.github.io,2015-01-01:hello world</id><summary type="html">&lt;p&gt;Hi, 2015 and the&amp;nbsp;world&lt;/p&gt;
&lt;p&gt;This is my personal website, and I treat it like a personal hacking note and some organization of some technical thinking. So I will keep the words simple and&amp;nbsp;focus.&lt;/p&gt;
&lt;p&gt;I think I should get some wish in the new&amp;nbsp;year:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Happy&amp;nbsp;life&lt;/li&gt;
&lt;li&gt;More powerful hacking&amp;nbsp;skills&lt;/li&gt;
&lt;li&gt;More time with my&amp;nbsp;family&lt;/li&gt;
&lt;li&gt;Job&lt;/li&gt;
&lt;li&gt;Health&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, ready let&amp;#8217;s&amp;nbsp;go&lt;/p&gt;
</summary><category term="pelican"></category></entry></feed>